<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Data.Extracting</name>
    </assembly>
    <members>
        <member name="T:DevRain.Text.Extracting.Analysis.ISimilarity">
            <summary>
            Summary description for IEditDistance.
            </summary>
        </member>
        <member name="M:DevRain.Text.Extracting.Analysis.ISimilarity.GetSimilarity(System.String,System.String)">
            <summary>
            Gets similarity between two strings.
            </summary>
            <param name="string1">First string.</param>
            <param name="string2">Second string.</param>
            <returns>Similarity between two strings.</returns>
        </member>
        <member name="M:DevRain.Text.Extracting.Analysis.ISimilarity.GetSimilarity``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Generic similarity evaluation.
            </summary>
            <typeparam name="T">Type.</typeparam>
            <param name="x">First object.</param>
            <param name="y">Second object.</param>
            <returns>Similarity between two IEquatable objects.</returns>
        </member>
        <member name="T:DevRain.Text.Extracting.Analysis.ContentAnalyzer">
            <summary>
            ContentAnalyzer is used for content analysis
            <author>Oleksandr Krakovetskiy</author>
            <mailto>Alex.Krakovetskiy@gmail.com</mailto>
            </summary>
        </member>
        <member name="T:DevRain.Data.Extracting.HtmlProcessor">
            <summary>
            HtmlProcessor is used for rich HTML processing.
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.HtmlProcessor.documentSource">
            <summary>
            Document source.
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.HtmlProcessor.doc">
            <summary>
            Gets or sets IHTMLDocument object
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.HtmlProcessor.doc2">
            <summary>
            Gets or sets IHTMLDocument2 object
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.HtmlProcessor.doc3">
            <summary>
            Gets or sets IHTMLDocument3 object
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.HtmlProcessor.doc4">
            <summary>
            Gets or sets IHTMLDocument4 object
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.HtmlProcessor.doc5">
            <summary>
            Gets or sets IHTMLDocument5 object
            </summary>
        </member>
        <member name="M:DevRain.Data.Extracting.HtmlProcessor.#ctor">
            <summary>
            Private constructor.
            </summary>
        </member>
        <member name="M:DevRain.Data.Extracting.HtmlProcessor.#ctor(System.Uri)">
            <summary>
            Public constructor.
            </summary>
            <param name="uri">Uri to be processed.</param>
        </member>
        <member name="M:DevRain.Data.Extracting.HtmlProcessor.#ctor(System.String)">
            <summary>
            Public constructor.
            </summary>
            <param name="html">Html string to be processed.</param>
        </member>
        <member name="M:DevRain.Data.Extracting.HtmlProcessor.GetIHTMLElementCollectionByTag(System.String)">
            <summary>
            Gets IHTMLElementCollection by tag name.
            </summary>
            <param name="tag">Tag name.</param>
            <returns>IHTMLElementCollection element collection.</returns>
        </member>
        <member name="M:DevRain.Data.Extracting.HtmlProcessor.GetElementsByTags(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets number of elements by tag names.
            </summary>
            <param name="сontrolNames">Array of tags.</param>
            <returns>Number of elements.</returns>
        </member>
        <member name="M:DevRain.Data.Extracting.HtmlProcessor.FromFile(System.String)">
            <summary>
            Gets HtmlProcessor object from content of file.
            </summary>
            <param name="path">File path.</param>
            <returns>HtmlProcessor object.</returns>
        </member>
        <member name="P:DevRain.Data.Extracting.HtmlProcessor.Title">
            <summary>
            Gets page title.
            </summary>
        </member>
        <member name="P:DevRain.Data.Extracting.HtmlProcessor.MetaKeywords">
            <summary>
            Gets page keywords string.
            </summary>
        </member>
        <member name="P:DevRain.Data.Extracting.HtmlProcessor.MetaDescription">
            <summary>
            Gets page keywords string.
            </summary>
        </member>
        <member name="P:DevRain.Data.Extracting.HtmlProcessor.Metas">
            <summary>
            Gets collection of webpage meta info.
            <see cref="!:http://habrahabr.ru/blogs/webdev/72141/"/>
            </summary>
        </member>
        <member name="P:DevRain.Data.Extracting.HtmlProcessor.DocumentSource">
            <summary>
            Gets document sourse.
            </summary>
        </member>
        <member name="P:DevRain.Data.Extracting.HtmlProcessor.InnerText">
            <summary>
            Gets or sets text string
            </summary>
        </member>
        <member name="P:DevRain.Data.Extracting.HtmlProcessor.Scripts">
            <summary>
            Gets collection of page scripts
            </summary>
        </member>
        <member name="P:DevRain.Data.Extracting.HtmlProcessor.Images">
            <summary>
            Gets collection of page images
            </summary>
        </member>
        <member name="P:DevRain.Data.Extracting.HtmlProcessor.Tables">
            <summary>
            Gets list of DataTable objects
            </summary>  
            <returns>List of DataTable objects</returns>
        </member>
        <member name="P:DevRain.Data.Extracting.HtmlProcessor.Headers">
            <summary>
            Heades collection
            </summary>
        </member>
        <member name="P:DevRain.Data.Extracting.HtmlProcessor.Links">
            <summary>
            Gets collection of page links.
            </summary>
        </member>
        <member name="P:DevRain.Data.Extracting.HtmlProcessor.HasFlash">
            <summary>
            Determines if flash exists.
            </summary>
        </member>
        <member name="P:DevRain.Data.Extracting.HtmlProcessor.Body">
            <summary>
            Gets Body element.
            </summary>
        </member>
        <member name="M:DevRain.Text.Extracting.Analysis.ContentAnalyzer.GetDocumentUniqueness(System.Collections.Generic.List{System.String},System.Int32,System.Int32)">
            <summary>
            Gets document content uniqueness.
            </summary>
            <param name="documents">List of all documents.</param>
            <param name="index">Index of document to be checked.</param>
            <param name="minimumSentenseLength">Minimum sentense length to be taken.</param>
            <returns>Calcilated document uniqueness in range [0; 1].</returns>
        </member>
        <member name="P:DevRain.Text.Extracting.Analysis.ContentAnalyzer.Words">
            <summary>
            Gets collection of words.
            </summary>
        </member>
        <member name="P:DevRain.Text.Extracting.Analysis.ContentAnalyzer.Sentences">
            <summary>
            Gets list of sentences.
            </summary>
        </member>
        <member name="P:DevRain.Text.Extracting.Analysis.ContentAnalyzer.SentencesAvgLength">
            <summary>
            Average sentences length (only words which are the part of sentences are taken). 
            </summary>
        </member>
        <member name="P:DevRain.Text.Extracting.Analysis.ContentAnalyzer.StopWords">
            <summary>
            Gets list of known stop words
            </summary>
        </member>
        <member name="P:DevRain.Text.Extracting.Analysis.ContentAnalyzer.WordsAsLinks">
            <summary>
            Gets number of words which are links
            </summary>
        </member>
        <member name="P:DevRain.Text.Extracting.Analysis.ContentAnalyzer.WordsAsLists">
            <summary>
            Gets words in lists ("li").
            </summary>
        </member>
        <member name="T:DevRain.Data.Extracting.Regexes">
            <summary>
            Class holds common regexes.
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.Regexes.Email">
            <summary>
            Email regex.
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.Regexes.EmailDotNet1_1">
            <summary>
            Email regex used in .NET 1.1.
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.Regexes.IP">
            <summary>
            IP regex.
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.Regexes.CapsWord">
            <summary>
            Caps words regex.
            "This IS a Test OF ALL Caps";
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.Regexes.Url">
            <summary>
            Url regex.
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.Regexes.DateTimeLong">
            <summary>
            Extract data in format "N/N/N H:M:S AM/PM"
            <example>01/02/2008 5:20:50 PM.</example>
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.Regexes.Phone">
            <summary>
            Phone regex.
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.Regexes.KeyValuePair">
            <summary>
            Keyword = Value regex.
            <example>"myval = 3" is valid.</example>
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.Regexes.SocialSecurityNumber">
            <summary>
            Validates the format, type, and length of the supplied input field. The input must consist of 3 numeric characters followed by a dash, then 2 numeric characters followed by a dash, and then 4 numeric characters.
            <example>"111-11-1111" is valid.</example>
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.Regexes.StrongPassword">
            <summary>
            Validates a strong password. It must be between 8 and 10 characters, contain at least one digit and one alphabetic character, and must not contain special characters.
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.Regexes.NonNegativeInteger">
            <summary>
            Validates that the field contains an integer greater than zero.
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.Regexes.ZipCode">
            <summary>
            Validates a U.S. ZIP Code. The code must consist of 5 or 9 numeric characters.
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.Regexes.RomanNumber">
            <summary>
            Roman numbers regex.
            <example>vii</example>
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.Regexes.CStyleComments">
            <summary>
            Regex for C style comments.
            <example>
            /*
             * this is an old cstyle comment block
             */
            </example>
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.Regexes.Number">
            <summary>
            Number regex.
            </summary>
        </member>
        <member name="T:DevRain.Data.Extracting.UserAgents">
            <summary>
            Defines default user agent string.
            </summary>
        </member>
        <member name="T:DevRain.Data.Extracting.WebScreenshotExtractor">
            <summary>
            WebScreenshotExtractor class can be used for screenshots extracting in web-applications.
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.WebScreenshotExtractor._uri">
            <summary>
            Uri to be processed.
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.WebScreenshotExtractor._image">
            <summary>
            Image bitmap.
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.WebScreenshotExtractor._scrollingEnabled">
            <summary>
            Determines is scrolling is enabled. 
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.WebScreenshotExtractor._imageHeight">
            <summary>
            Image height.
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.WebScreenshotExtractor._imageWidth">
            <summary>
            Image width.
            </summary>
        </member>
        <member name="M:DevRain.Data.Extracting.WebScreenshotExtractor.#ctor">
            <summary>
            Private construtor.
            </summary>
        </member>
        <member name="M:DevRain.Data.Extracting.WebScreenshotExtractor.#ctor(System.Uri)">
            <summary>
            Public constructor.
            </summary>
            <param name="uri">Uri to be processed.</param>
        </member>
        <member name="M:DevRain.Data.Extracting.WebScreenshotExtractor.#ctor(System.Uri,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Public constructor.
            </summary>
            <param name="uri">Uri to be processed.</param>
            <param name="iWidth">Image width.</param>
            <param name="iHeight">Image height.</param>
            <param name="scrollingEnabled">Determines if scrolling is enabled.</param>
        </member>
        <member name="M:DevRain.Data.Extracting.WebScreenshotExtractor.MakeScreenshot">
            <summary>
            Makes screenshot.
            </summary>
        </member>
        <member name="P:DevRain.Data.Extracting.WebScreenshotExtractor.Image">
            <summary>
            Gets extracted image.
            </summary>
        </member>
        <member name="T:DevRain.Data.Extracting.UriHtmlExtractor">
            <summary>
            BaseUriExtractor class is a base class for uri-enabled data extracting classes.
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.UriHtmlExtractor._webClient">
            <summary>
            WebClient object.
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.UriHtmlExtractor._uri">
            <summary>
            Uri object.
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.UriHtmlExtractor._userAgent">
            <summary>
            User agent.
            </summary>
        </member>
        <member name="M:DevRain.Data.Extracting.UriHtmlExtractor.#ctor(System.Uri,System.Collections.Specialized.NameValueCollection,System.Net.WebProxy,System.String)">
            <summary>
            Public constructor.
            </summary>
            <param name="uri">Uri to be processed.</param>
            <param name="proxy">WebProxy to be used.</param>
            <param name="postParameters">Collection of parameters for POST request.</param>
        </member>
        <member name="M:DevRain.Data.Extracting.UriHtmlExtractor.IsPageExists(System.String)">
            <summary>
            Checks is specific page exists
            </summary>
            <param name="pageName">Page name to be checked.</param>
            <returns>True if exists, false otherwize.</returns>
        </member>
        <member name="M:DevRain.Data.Extracting.UriHtmlExtractor.FindPage(System.String)">
            <summary>
            Searches for pages with suggested name.
            </summary>
            <param name="pageName">Page name to be searched.</param>
            <returns>Uri if found, null otherwize.</returns>
        </member>
        <member name="M:DevRain.Data.Extracting.UriHtmlExtractor.FindPage(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Searches for any page from the array.
            </summary>
            <param name="pageNames">Array of pages</param>
            <returns>Uri if found, false otherwize.</returns>
        </member>
        <member name="M:DevRain.Data.Extracting.UriHtmlExtractor.IsHtmlContent(System.String)">
            <summary>
            Checks if contentType is text/html.
            </summary>
            <param name="contentType">Content type string.</param>
            <returns>True if text/html, false otherwize.</returns>
        </member>
        <member name="M:DevRain.Data.Extracting.UriHtmlExtractor.IsHtmlMarkupValid">
            <summary>
            Checks if HTML markup is valid.
            </summary>
            <see cref="!:http://validator.w3.org/"/>
            <returns>True if valid, false otherwise.</returns>
        </member>
        <member name="M:DevRain.Data.Extracting.UriHtmlExtractor.IsCSSValid">
            <summary>
            Checks if CSS markup is valid.
            </summary>
            <see cref="!:http://jigsaw.w3.org/css-validator/"/>
            <returns>True if valid, false otherwise.</returns>
        </member>
        <member name="M:DevRain.Data.Extracting.UriHtmlExtractor.IsFaviconExists">
            <summary>
            Checks is favicon.ico exists.
            </summary>
            <returns>True if exists, false otherwise.</returns>
        </member>
        <member name="M:DevRain.Data.Extracting.UriHtmlExtractor.IsRobotsTxtExists">
            <summary>
            Checks if robots.txt file exists.
            </summary>
            <returns>True if exists, false otherwise.</returns>
        </member>
        <member name="P:DevRain.Data.Extracting.UriHtmlExtractor.DocumentHtml">
            <summary>
            Gets html code string
            </summary>
        </member>
        <member name="P:DevRain.Data.Extracting.UriHtmlExtractor.DocumentText">
            <summary>
            Gets text string.
            </summary>
        </member>
        <member name="P:DevRain.Data.Extracting.UriHtmlExtractor.StatusCode">
            <summary>
            Gets query status code.
            </summary>
        </member>
        <member name="P:DevRain.Data.Extracting.UriHtmlExtractor.GooglePageRank">
            <summary>
            Gets Google PageRank.
            </summary>
        </member>
        <member name="T:DevRain.Data.Extracting.PrintScreenExtractor">
            <summary>
            PrintScreenExtractor class.
            </summary>
        </member>
        <member name="M:DevRain.Data.Extracting.PrintScreenExtractor.GetBitmap">
            <summary>
            Makes print screen screenshot.
            </summary>
            <returns>PrintScreen Bitmap object.</returns>
        </member>
        <member name="T:DevRain.Data.Extracting.EnumDescriptionAttribute">
            <summary>
            EnumDescriptionAttribute attribute is used for Enums description.
            </summary>
        </member>
        <member name="M:DevRain.Data.Extracting.EnumDescriptionAttribute.#ctor(System.String)">
            <summary>
            Constructor used tpublic const string init a StringValue Attribute
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:DevRain.Data.Extracting.EnumDescriptionAttribute.StringValue">
            <summary>
            Gets or sets a string value for enum item.
            </summary>
        </member>
        <member name="T:DevRain.Data.Extracting.ExtentionUtils">
            <summary>
            Extensions for Enums.
            </summary>
        </member>
        <member name="M:DevRain.Data.Extracting.ExtentionUtils.GetStringValue(System.Enum)">
            <summary>
            Will get the string value for a given enums value, this will
            only work if you assign the StringValue attribute to
            the items in your enum.
            </summary>
            <param name="value">Enum's value.</param>
            <returns>Enum's string value.</returns>
        </member>
        <member name="T:DevRain.Data.Extracting.HeaderTypes">
            <summary>
            Web page header types
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.HeaderTypes.H1">
            <summary>
            H1.
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.HeaderTypes.H2">
            <summary>
            H2.
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.HeaderTypes.H3">
            <summary>
            H3.
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.HeaderTypes.H4">
            <summary>
            H4.
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.HeaderTypes.H5">
            <summary>
            H5.
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.HeaderTypes.H6">
            <summary>
            H6.
            </summary>
        </member>
        <member name="T:DevRain.Data.Extracting.HttpMethods">
            <summary>
            Http methods enumeration.
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.HttpMethods.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.HttpMethods.GET">
            <summary>
            GET method.
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.HttpMethods.POST">
            <summary>
            POST method.
            </summary>
        </member>
        <member name="T:DevRain.Data.Extracting.BoundTypes">
            <summary>
            Bound types enumeration.
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.BoundTypes.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.BoundTypes.SaveBefore">
            <summary>
            Save before type.
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.BoundTypes.SaveAfter">
            <summary>
            Save after type.
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.BoundTypes.SaveBoth">
            <summary>
            Save both type.
            </summary>
        </member>
        <member name="T:DevRain.Data.Extracting.DataTypes">
            <summary>
            Data types enumeration.
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.DataTypes.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.DataTypes.Email">
            <summary>
            Email data type.
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.DataTypes.IP">
            <summary>
            IP data type.
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.DataTypes.Phone">
            <summary>
            Phone data type.
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.DataTypes.All">
            <summary>
            All data types.
            </summary>
        </member>
        <member name="T:DevRain.Data.Extracting.TextSources">
            <summary>
            Text sources enumeration.
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.TextSources.Text">
            <summary>
            Text source.
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.TextSources.Html">
            <summary>
            Html source.
            </summary>
        </member>
        <member name="T:DevRain.Data.Extracting.SearchEngines">
            <summary>
            Search engines enumeration.
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.SearchEngines.Google">
            <summary>
            Google search engine. 
            <see>http://google.com/</see>
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.SearchEngines.Yandex">
            <summary>
            Yandex search engine.
            <see>http://yandex.ru/</see>
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.SearchEngines.Bing">
            <summary>
            Bing search engine.
            <see>http://bing.com/</see>
            </summary>
        </member>
        <member name="T:DevRain.Data.Extracting.ImageSizeTypes">
            <summary>
            Image sizes enumeration.
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.ImageSizeTypes.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.ImageSizeTypes.VerySmall">
            <summary>
            Very small size.
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.ImageSizeTypes.Small">
            <summary>
            Small size.
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.ImageSizeTypes.Middle">
            <summary>
            Middle size.
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.ImageSizeTypes.Big">
            <summary>
            Big size.
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.ImageSizeTypes.VeryBig">
            <summary>
            Very big size.
            </summary>
        </member>
        <member name="M:DevRain.Data.Extracting.Analysis.JaroWinkler.getSimilarity(System.String,System.String)">
             gets the similarity of the two strings using Jaro distance.
            
             @param string1 the first input string
             @param string2 the second input string
             @return a value between 0-1 of the similarity
        </member>
        <member name="M:DevRain.Data.Extracting.Analysis.JaroWinkler.getCommonCharacters(System.String,System.String,System.Int32)">
             returns a string buffer of characters from string1 within string2 if they are of a given
             distance seperation from the position in string1.
            
             @param string1
             @param string2
             @param distanceSep
             @return a string buffer of characters from string1 within string2 if they are of a given
                     distance seperation from the position in string1
        </member>
        <member name="T:WordsMatching.Tokeniser">
            <summary>
            Summary description for Tokeniser.
            Partition string off into subwords
            </summary>
        </member>
        <member name="T:DevRain.Data.Extracting.DataExtractor">
            <summary>
            BaseDataExtractor class.
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.DataExtractor._dataTypesToExtract">
            <summary>
            Sets data types to extract.
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.DataExtractor._htmlProcessor">
            <summary>
            UriHtmlProcessor object.
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.DataExtractor._regexStrings">
            <summary>
            List of regex strings.
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.DataExtractor._customRegexStrings">
            <summary>
            Dictionaty with custom regex strings.
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.DataExtractor._results">
            <summary>
            List of extracting items.
            </summary>
        </member>
        <member name="M:DevRain.Data.Extracting.DataExtractor.#ctor(System.String,DevRain.Data.Extracting.DataTypes)">
            <summary>
            Public constructor.
            </summary>
            <param name="html">Html string to be processed.</param>
            <param name="dataTypesToExtract">Data types need to be extracted.</param>
        </member>
        <member name="M:DevRain.Data.Extracting.DataExtractor.#ctor(System.Uri,DevRain.Data.Extracting.DataTypes)">
            <summary>
            Public constructor.
            </summary>
            <param name="uri">Uri object.</param>
            <param name="dataTypesToExtract">Data types need to be extracted.</param>
        </member>
        <member name="M:DevRain.Data.Extracting.DataExtractor.GetExtractedResults(System.String)">
            <summary>
            Gets extracted results by group name.
            </summary>
            <param name="groupName">Group name.</param>
            <returns>Extracted results.</returns>
        </member>
        <member name="M:DevRain.Data.Extracting.DataExtractor.GetExtractedResults">
            <summary>
            Gets extracted data.
            </summary>
        </member>
        <member name="M:DevRain.Data.Extracting.DataExtractor.AddCustomRegex(System.String,System.String)">
            <summary>
            Adds extracted data items with passed regex and group name.
            </summary>
            <param name="regex">Regex to be used.</param>
            <param name="groupName">Group name of data patterns.</param>
        </member>
        <member name="M:DevRain.Data.Extracting.DataExtractor.AddRegex(System.String,System.String)">
            <summary>
            Adds custom regex to collection.
            </summary>
            <param name="regex">Regex to be used.</param>
            <param name="groupName">Group name.</param>
        </member>
        <member name="T:DevRain.Data.Extracting.GooglePRChecker">
            <summary>
            Google PageRank checker. 
            </summary>
        </member>
        <member name="M:DevRain.Data.Extracting.GooglePRChecker.GetPageRank(System.Uri)">
            <summary>
            Gets PageRank.
            </summary>
            <param name="uri">Uri to be checked.</param>
            <returns>Google PageRank.</returns>
        </member>
        <member name="T:DevRain.Data.Extracting.DomElement">
            <summary>
            Represents DOM element class.
            </summary>
        </member>
        <member name="P:DevRain.Data.Extracting.DomElement.InnerHtml">
            <summary>
            Gets or sets inner HTML string.
            </summary>
        </member>
        <member name="P:DevRain.Data.Extracting.DomElement.Class">
            <summary>
            Gets or sets CSS class name.
            </summary>
        </member>
        <member name="P:DevRain.Data.Extracting.DomElement.Id">
            <summary>
            Gets or sets element's id.
            </summary>
        </member>
        <member name="P:DevRain.Data.Extracting.DomElement.Processor">
            <summary>
            
            </summary>
        </member>
        <member name="T:DevRain.Data.Extracting.DomElementExtensions">
            <summary>
            DomElementExtensions class.
            </summary>
        </member>
        <member name="M:DevRain.Text.Extracting.Analysis.Levenshtein.GetSimilarity(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="string1"></param>
            <param name="string2"></param>
            <returns></returns>
        </member>
        <member name="M:DevRain.Text.Extracting.Analysis.Levenshtein.GetSimilarity``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
            <SUMMARY>Computes the Levenshtein Edit Distance between two enumerables.</SUMMARY>
            <TYPEPARAM name="T">The type of the items in the enumerables.</TYPEPARAM>
            <PARAM name="x">The first enumerable.</PARAM>
            <PARAM name="y">The second enumerable.</PARAM>
            <see cref="!:http://en.wikipedia.org/wiki/Levenshtein_distance"/>
            <RETURNS>The edit distance.</RETURNS>
        </member>
        <member name="T:DevRain.Data.Extracting.TFIDFMeasure">
            <summary>
            Summary description for TF_IDFLib.
            </summary>
        </member>
        <member name="T:DevRain.Data.Extracting.ExtractedItemInfo">
            <summary>
            ExtractedItemInfo class.
            </summary>
        </member>
        <member name="T:DevRain.Text.Extracting.Analysis.NGram">
            <summary>
            Class for generating n-grams.
            </summary>
        </member>
        <member name="M:DevRain.Text.Extracting.Analysis.NGram.GenerateNGrams(System.String,System.Int32)">
            <summary>
            Generates n-grams.
            </summary>
            <param name="text">Text string.</param>
            <param name="gramLength">Gram length to be generated.</param>
            <returns>List of n-grams.</returns>
        </member>
        <member name="M:DevRain.Text.Extracting.Analysis.NGram.GetNGramSimilarity(System.String,System.String,System.Int32)">
            <summary>
            Gets n-gram similarity.
            </summary>
            <param name="string1">First string.</param>
            <param name="string2">Second string.</param>
            <param name="length">N-gram length.</param>
            <returns>N-gram similarity.</returns>
        </member>
        <member name="M:DevRain.Text.Extracting.Analysis.NGram.GetBiGramSimilarity(System.String,System.String)">
            <summary>
            Gets bi-gram similarity.
            </summary>
            <param name="string1">First string.</param>
            <param name="string2">Second string.</param>
            <param name="length">N-gram length.</param>
            <returns>N-gram similarity.</returns>
        </member>
        <member name="M:DevRain.Text.Extracting.Analysis.NGram.GetTriGramSimilarity(System.String,System.String)">
            <summary>
            Gets tri-gram similarity.
            </summary>
            <param name="string1">First string.</param>
            <param name="string2">Second string.</param>
            <param name="length">N-gram length.</param>
            <returns>N-gram similarity.</returns>
        </member>
        <member name="M:DevRain.Text.Extracting.Analysis.NGram.GetQuadGramSimilarity(System.String,System.String)">
            <summary>
            Gets quad-gram similarity.
            </summary>
            <param name="string1">First string.</param>
            <param name="string2">Second string.</param>
            <returns>N-gram similarity.</returns>
        </member>
        <member name="T:DevRain.Data.Extracting.Tokeniser">
            <summary>
            Summary description for Tokeniser.
            Partition string into SUBwords
            </summary>
        </member>
        <member name="T:DevRain.Data.Extracting.LinksExtractor">
            <summary>
            LinksExtractor class is used for extract links from search engines.
            </summary>
        </member>
        <member name="M:DevRain.Data.Extracting.LinksExtractor.#ctor(System.String,DevRain.Data.Extracting.SearchEngines,System.Int32,System.Net.WebProxy)">
            <summary>
            Public constructor.
            </summary>
            <param name="query">Query to be processed.</param>
            <param name="engine">Search engine to be used.</param>
            <param name="pageCount">Pages count to be processed (50 is a maximum).</param>
            <param name="proxy">WebProxy object if needed (use null if not).</param>
        </member>
        <member name="M:DevRain.Data.Extracting.LinksExtractor.GetExtractedLinks(System.Uri)">
            <summary>
            Extracts links.
            </summary>
            <param name="uri">Uri to be processed.</param>
            <returns>Extracted links.</returns>
        </member>
        <member name="M:DevRain.Data.Extracting.LinksExtractor.GetEngineReadyQuery(System.String)">
            <summary>
            Formats query string.
            </summary>
            <param name="query">Query string.</param>
            <returns>Formatted query string.</returns>
        </member>
        <member name="P:DevRain.Data.Extracting.LinksExtractor.Links">
            <summary>
            Gets list of extracted links.
            </summary>
        </member>
        <member name="T:DevRain.Data.Extracting.Analysis.PorterStemmer">
            <summary>
            Finding out the base form of a word, removing infexional endings.
            Implementation of Martin Porter algorithm.
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.Analysis.PorterStemmer.i">
            <summary>
            Offset into b.
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.Analysis.PorterStemmer.offset">
            <summary>
            Offset to end of stemmed word.
            </summary>
        </member>
        <member name="F:DevRain.Data.Extracting.Analysis.PorterStemmer.INC">
            <summary>
            Size units in which s is increased.
            </summary>
        </member>
        <member name="M:DevRain.Data.Extracting.Analysis.PorterStemmer.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:DevRain.Data.Extracting.Analysis.PorterStemmer.setto(System.String)">
            setto(s) sets (j+1),...k to the characters in the string s, readjusting
        </member>
        <member name="P:DevRain.Data.Extracting.Analysis.PorterStemmer.Term">
            <summary>
            Gets result term.
            </summary>
        </member>
        <member name="T:DevRain.Data.Extracting.Extensions">
            <summary>
            Extensions class contains extension methods.
            </summary>
        </member>
        <member name="M:DevRain.Data.Extracting.Extensions.ToGreyScale(System.Drawing.Bitmap)">
            <summary>
            Converts Bitmap to grayscale
            </summary>
            <param name="bitmap">Bitmap object</param>
            <returns>Grayscaled Bitmap object</returns>
        </member>
        <member name="M:DevRain.Data.Extracting.Extensions.Scale(System.Drawing.Bitmap,System.Int32)">
            <summary>
            Scales the Bitmap image
            </summary>
            <param name="bitmap">Bitmap object</param>
            <param name="percent">Scale percent</param>
            <returns></returns>
        </member>
        <member name="M:DevRain.Data.Extracting.Extensions.ResizeWithCrop(System.Drawing.Bitmap,System.Int32,System.Int32,System.String)">
            <summary>
            Resizes the image wuth crop
            </summary>
            <param name="bitmap">Bitmap object</param>
            <param name="width">New width</param>
            <param name="height">New height</param>
            <param name="anchor">Anchor: top, bottom, right, left</param>
            <returns>Resized image</returns>
        </member>
        <member name="M:DevRain.Data.Extracting.Extensions.Resize(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            Recizes the image
            </summary>
            <param name="bitmap">Bitmap object</param>
            <param name="width">New width</param>
            <param name="height">New height</param>
            <returns>Resized image</returns>
        </member>
        <member name="M:DevRain.Data.Extracting.Extensions.GetThumbnail(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            Gets thumbnail image from bitmap.
            </summary>
            <param name="bitmap">Bitmap to be processed.</param>
            <param name="width">Thumbnail width.</param>
            <param name="height">Thumbnail height.</param>
            <returns>Thumbnail bitmap.</returns>
        </member>
        <member name="M:DevRain.Data.Extracting.Extensions.GetImageSizeType(System.Drawing.Bitmap)">
            <summary>
            Gets image size type.
            </summary>
            <param name="image">Image object.</param>
            <returns>ImageSizeTypes object.</returns>
        </member>
        <member name="M:DevRain.Data.Extracting.Extensions.SaveAsCsv(System.Data.DataTable,System.String)">
            <summary>
            Writes all data from the DataTable to CSV file
            </summary>
            <param name="dt">DataTable object</param>
            <param name="path">File path to be saved in</param>
        </member>
        <member name="M:DevRain.Data.Extracting.Extensions.SaveAsCsv2(System.Data.DataTable,System.String)">
            <summary>
            Saves as csv 2.
            </summary>
            <param name="dt">DataTable object.</param>
            <param name="path">Path where csv file will be saved.</param>
        </member>
        <member name="M:DevRain.Data.Extracting.Extensions.LoadFromCsv(System.Data.DataTable,System.String,System.String)">
            <summary>
            Loads data from csv file to DataTable object.
            </summary>
            <param name="dt">DataTable object.</param>
            <param name="filePath">File path to be loaded from.</param>
            <param name="separator">Separator string value.</param>
            <returns>DataTable object.</returns>
        </member>
        <member name="M:DevRain.Data.Extracting.Extensions.GetCountries">
            <summary>
            Gets list of countries.
            <see>http://www.iso.org/iso/country_codes/iso_3166_code_lists/english_country_names_and_code_elements.htm</see>
            </summary>
            <returns></returns>
        </member>
        <member name="M:DevRain.Data.Extracting.Extensions.GetStopWords">
            <summary>
            Gets list of stop words.
            </summary>
        </member>
        <member name="M:DevRain.Data.Extracting.Extensions.GetMatches(System.String,System.String)">
            <summary>
            Gets regex match.
            </summary>
            <param name="text">Text string.</param>
            <param name="regex">Regex string.</param>
            <returns>String that matches the regex.</returns>
        </member>
        <member name="M:DevRain.Data.Extracting.Extensions.SaveAsTxt(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Saves List of strings in text file (one item per line)
            </summary>
            <param name="list">List to be saved.</param>
            <param name="filePath">File path to be saved in.</param>
        </member>
        <member name="M:DevRain.Data.Extracting.Extensions.ToCommaString(System.Collections.Generic.List{System.String})">
            <summary>
            
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:DevRain.Data.Extracting.Extensions.ToDataTable``1(System.Collections.Generic.IList{``0})">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:DevRain.Data.Extracting.Extensions.ReplaceNewLine2Br(System.String)">
            <summary>
            Replace \r\n or \n by <br />
            from http://weblogs.asp.net/gunnarpeipman/archive/2007/11/18/c-extension-methods.aspx
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:DevRain.Data.Extracting.Extensions.GetCleanedWordHtml(System.String)">
            <summary>
            Removes all FONT and SPAN tags, and all Class and Style attributes.
            Designed to get rid of non-standard Microsoft Word HTML tags.
            </summary>
        </member>
        <member name="M:DevRain.Data.Extracting.Extensions.FixUrl(System.String,System.Uri)">
            <summary>
            Fix wrong url strings.
            </summary>
            <param name="url">Url string.</param>
            <param name="baseUri">Base Uri object.</param>
            <returns>Fixed uri string.</returns>
        </member>
        <member name="M:DevRain.Data.Extracting.Extensions.RemoveHtmlTags(System.String)">
            <summary>
            Removes HTML tags.
            </summary>
            <param name="html">Html code.</param>
            <returns>Cleaned text.</returns>
        </member>
        <member name="M:DevRain.Data.Extracting.Extensions.GetHtmlString(System.String,System.String,System.String,DevRain.Data.Extracting.BoundTypes,System.StringComparison)">
            <summary>
            Gets html string placed between passed strings
            </summary>
            <param name="originalString">String to be processed.</param>
            <param name="before">Before string</param>
            <param name="after">After string</param>
            <param name="boundType">BoundTypes value</param>
            <param name="comparison">StringComparison type</param>
            <returns>First found Html string</returns>
        </member>
        <member name="M:DevRain.Data.Extracting.Extensions.IsStopWord(System.String)">
            <summary>
            Checks if word is stop-word.
            </summary>
            <param name="word">Word to be checked.</param>
            <returns>True is stop-word, false otherwize.</returns>
        </member>
        <member name="M:DevRain.Data.Extracting.Extensions.GetWordDensity(System.String,System.String)">
            <summary>
            Calculated words density.
            </summary>
            <param name="text">Text to be processed.</param>
            <param name="word">Word to be searched.</param>
            <returns>Word density.</returns>
        </member>
        <member name="M:DevRain.Data.Extracting.Extensions.GetWordOccurence(System.String,System.String)">
            <summary>
            Counts word occurance in text.
            </summary>
            <param name="text">Text to be searched in.</param>
            <param name="word">Word to be searched.</param>
            <returns>Number of word ocurence.</returns>
        </member>
        <member name="M:DevRain.Data.Extracting.Extensions.TrimSafe(System.String)">
            <summary>
            Safe trim.
            </summary>
            <param name="text">Text to be trimmed.</param>
            <returns>Trimmed string.</returns>
        </member>
        <member name="M:DevRain.Data.Extracting.Extensions.IndexOfAny(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            
            </summary>
            <param name="text"></param>
            <param name="array"></param>
            <returns></returns>
        </member>
        <member name="M:DevRain.Data.Extracting.Extensions.RemoveSpecialCharacters(System.String)">
            <summary>
            Removes whitespaces and special characters from string.
            </summary>
            <param name="text">Text string.</param>
            <returns>Cleaned string.</returns>
        </member>
        <member name="M:DevRain.Data.Extracting.Extensions.IsNullOrEmpty(System.String)">
            <summary>
            
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:DevRain.Data.Extracting.Extensions.IsNotNullOrEmpty(System.String)">
            <summary>
            
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:DevRain.Data.Extracting.Extensions.RemoveDublicatedCharacters(System.String,System.String)">
            <summary>
            Removes dublicated characters.
            </summary>
            <param name="str">String to be processed.</param>
            <param name="character">Character to be removed.</param>
            <returns>Cleaned string.</returns>
        </member>
        <member name="M:DevRain.Data.Extracting.Extensions.RemoveWhitespaces(System.String)">
            <summary>
            Removes tabs, double whitespaces from string.
            </summary>
            <param name="text">String to be processed.</param>
            <returns>Cleaned string.</returns>
        </member>
        <member name="M:DevRain.Data.Extracting.Extensions.SplitToWords(System.String)">
            <summary>
            Splits text to words
            </summary>
            <param name="text">Text to be splitted</param>
            <returns>List of words</returns>
        </member>
        <member name="M:DevRain.Data.Extracting.Extensions.GetWordsWithOccurences(System.String)">
            <summary>
            Counts words occurence.
            </summary>
            <param name="text">Text to be processed.</param>
            <returns>SortedList with words and their occurences.</returns>
        </member>
        <member name="M:DevRain.Data.Extracting.Extensions.Encode(System.String,System.Text.Encoding,System.Text.Encoding)">
            <summary>
            Converts string from one encoding to another.
            </summary>
            <param name="value">String to be converted.</param>
            <param name="src">Source encoding.</param>
            <param name="trg">Target encoding.</param>
            <returns>Encoded string.</returns>
        </member>
        <member name="M:DevRain.Data.Extracting.Extensions.GetShortPath(System.String,System.Int32)">
            <summary>
            Gets short path.
            </summary>
            <param name="path">Original path.</param>
            <param name="length">Path length.</param>
            <returns>Short path.</returns>
        </member>
        <member name="M:DevRain.Data.Extracting.Extensions.GetShortPath2(System.String,System.Int32)">
            <summary>
            Gets short path.
            </summary>
            <param name="path">Original path.</param>
            <param name="maxLength">Max length.</param>
            <returns>Short path.</returns>
        </member>
        <member name="M:DevRain.Data.Extracting.Extensions.ToWindows1251(System.String)">
            <summary>
            Converts string from UTF-8 to Windows-1251
            </summary>
            <param name="value">String to be converted.</param>
            <returns>String in Windows-1251 encoding.</returns>
        </member>
        <member name="M:DevRain.Data.Extracting.Extensions.Reduce(System.String,System.Int32,System.String)">
            <example>
            string description = "This is very long description of something";
            string preview = description.Reduce(20,"...");
            produce -> "This is very long..."
            </example>
            <returns></returns>
        </member>
        <member name="M:DevRain.Data.Extracting.Extensions.RemoveDiacritics(System.String)">
            <summary>
            Remove accent from strings 
            </summary>
            <example>
             input:  "Příliš žluťoučký kůň úpěl ďábelské ódy."
             result: "Prilis zlutoucky kun upel dabelske ody."
            </example>
            <param name="s"></param>
            <remarks>Founded at http://stackoverflow.com/questions/249087/
            how-do-i-remove-diacritics-accents-from-a-string-in-net</remarks>
            <returns>String without accents.</returns>
        </member>
        <member name="M:DevRain.Data.Extracting.Extensions.ConnectionExists(System.Uri)">
            <summary>
            Determines if connection exists.
            </summary>
            <param name="uri">Uri to be checked.</param>
            <returns>True is exists, false otherwize.</returns>
        </member>
        <member name="M:DevRain.Data.Extracting.Extensions.GetDomainLevel(System.Uri)">
            <summary>
            Gets domain level.
            </summary>
            <param name="uri">Uri to be processed.</param>
            <returns>Domain level.</returns>
        </member>
        <member name="M:DevRain.Data.Extracting.Extensions.GetGooglePageRank(System.Uri)">
            <summary>
            Gets Google PageRank.
            </summary>
            <param name="uri">Uri to be checked.</param>
            <returns>Google PageRank.</returns>
        </member>
        <member name="M:DevRain.Data.Extracting.Extensions.GetZone(System.Uri)">
            <summary>
            Gets zone name.
            </summary>
            <example>'http://microsoft.com/' will return '.com'</example>
            <example>'http://microsoft.com.ua/' will return '.com.ua'</example>
            <param name="uri">Uri to be processed.</param>
            <returns>Zon name.</returns>
        </member>
        <member name="M:DevRain.Data.Extracting.Extensions.GetServerStatusCode(System.Uri)">
            <summary>
            Gets server status code.
            </summary>
            <param name="uri">Uri to be processed.</param>
            <returns>Server status code.</returns>
        </member>
        <member name="T:DevRain.Data.Extracting.DataCollections">
            <summary>
            Stop words handler.
            </summary>
        </member>
        <member name="M:DevRain.Data.Extracting.DataCollections.GetOperatingSystems">
            <summary>
            Returns a list of operation systems.
            </summary>
            <see cref="!:http://user-agent-string.info/list-of-ua/os"/>
            <returns>List of operation systems</returns>
        </member>
        <member name="M:DevRain.Data.Extracting.DataCollections.GetBrowsers">
            <summary>
            Get list of browsers.
            <see cref="!:http://user-agent-string.info/list-of-ua"/>
            </summary>
            <returns>List of browsers.</returns>
        </member>
        <member name="M:DevRain.Data.Extracting.MainContentExtractor.postProcessContent(System.Windows.Forms.HtmlElement)">
            <summary>
            Runs readability.
            Workflow:
             1. Prep the document by removing script tags, css, etc.
             2. Build readability's DOM tree.
             3. Grab the article content from the current dom tree.
             4. Replace the current DOM tree with the new one.
             5. Read peacefully.
            </summary>
            <param name="articleContent"></param>
        </member>
    </members>
</doc>
